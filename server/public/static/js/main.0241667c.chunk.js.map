{"version":3,"sources":["api/ajax.js","api/index.js","utils/storageUtils.js","redux/action-types.js","redux/actions.js","pages/login/login.jsx","components/link-button/index.jsx","config/menuConfig.js","utils/dateUtils.js","components/header/index.jsx","components/left-nav/index.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/index.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","utils/constants.js","pages/product/pictrues-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/home.jsx","pages/product/index.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/index.jsx","utils/dateUtil.js","pages/user/user-form.jsx","pages/user/index.jsx","pages/not-found/not-found.jsx","pages/admin/index.jsx","App.jsx","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js","assets/images/logo.png","assets/images/WeatherIcon/weather-icon-S2/256/100.png"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","_ref2","searchName","searchType","Object","defineProperty","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","getWeather","navigator","geolocation","getCurrentPosition","res","_res$coords","coords","latitude","longitude","concat","err","storageUtils","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","setHeadTitle","headTitle","receiveUser","logout","Item","es_form","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","values","wrap","_context","prev","next","console","log","login","stop","_x","_x2","apply","this","validatePwd","rule","value","callback","test","react_default","createElement","react_router","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","es_button","htmlType","Component","WrapLogin","create","connect","state","dispatch","msg","sent","LinkButton","assign","menuList","title","key","isPublic","children","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","dayPictureUrl","weather","getTime","intervalId","setInterval","setState","_yield$getWeather","text","getTitle","path","location","pathname","forEach","item","cItem","find","indexOf","modal","confirm","content","onOk","assertThisInitialized","clearInterval","_this$state","onClick","pic","withRouter","SubMenu","menu","LeftNav","hasAuth","menus","child","getMenuNodes_map","map","getMenuNodes","react_router_dom","reduce","pre","openKey","push","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","Line","dv","DataSet","createView","source","month","b","c","transform","fields","float","width","height","BizCharts","scale","range","forceFit","label","formatter","val","crosshairs","position","size","shape","stroke","lineWidth","Bar","marginLeft","year","sales","tickInterval","RangePicker","date_picker","Home","isVisited","handleChange","card","extra","headStyle","statistic","suffix","fontWeight","valueStyle","fontSize","line_Line","defaultValue","moment","format","bodyStyle","padding","bar_Bar","timeline","Option","es_select","AddForm","setForm","_this$props","categorys","add_form_Item","add_form","UpdateForm","update_form_Item","update_form","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","result","showCategorys","handleCancel","resetFields","showAdd","addCategory","_callee2","_context2","_x3","updateCategory","_ref3","_callee3","_context3","_x4","_x5","_this2","marginRight","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","GTA","RE8","update","g","cur","getOption","tooltip","legend","xAxis","yAxis","series","esm","option","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","PAGE_SIZE","BASE_IMG_URL","PicturesWall","classCallCheck","_super","call","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","_result$data","success","imgs","img","index","uid","uploadButton","upload","action","accept","listType","onPreview","onChange","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","submit","price","desc","categoryIds","pCategoryId","pw","current","editor","isUpdate","history","goBack","validatePrice","initOptions","_assertThisInitialize","childOptions","isLeaf","abrupt","loadData","_ref4","_callee4","selectedOptions","targetOption","_context4","toConsumableArray","React","createRef","formItemLayout","labelCol","span","wrapperCol","add_update_Item","autoSize","minRows","maxRows","addonAfter","cascader","pictrues_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","add_update","es_list","ProductDetail","cName1","cName2","_this$props$location$","ress","_cName","all","_this$props$location$2","detail_Item","justifyContent","dangerouslySetInnerHTML","__html","ProductHome","products","__v","total","newStatus","updateStatus","id","getProucts","_res$data","list","_this$state2","home_Option","margin","target","Product","component","exact","role_add_form_Item","role_add_form","TreeNode","tree","AuthForm","getTreeNodes","getMenus","checkedKeys","onCheck","treeNodes","nextProps","auth_form_Item","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","onRow","getRoles","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","auth_form_AuthForm","UserForm","user_form_Item","phone","email","user_form_Option","PureComponent","user_form","User","users","isShow","roleNames","deleteUser","addOrUpdateUser","isUser","getUsers","initRoleNames","_onOk","NotFound","goHome","replace","row","col","Content","layout","Footer","Sider","Admin","components_left_nav","components_header","background","from","textAlign","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initTitle","initUser","combineReducers","objectSpread2","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","App_App","document","getElementById","module","exports","p"],"mappings":"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","file":"static/js/main.0241667c.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\nimport axios from \"axios\";\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n// 登陆\r\n/*\r\nexport function reqLogin(username, password) {\r\n  return ajax('/login', {username, password}, 'POST')\r\n}*/\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', {parentId})\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */\r\n\r\n/**\r\n * 获取天气\r\n * @returns Promise\r\n */\r\nexport const getWeather = () => {\r\n  return new Promise((resolve, reject)=>{\r\n    navigator.geolocation.getCurrentPosition((res) => {\r\n        const {latitude, longitude} = res.coords\r\n        const url = `https://devapi.qweather.com/v7/weather/now?location=${longitude},${latitude}&key=922f9ed88b83494480d751359b19d7a7`\r\n        let promise\r\n        promise = axios.get(url)\r\n        promise.then(res => resolve(res.data)).catch(err => message.error('请求出错了：', err))\r\n    })\r\n  })\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/**\r\n * 包含n个action的type常量标识名称的模块\r\n */\r\n\r\n/**\r\n * 设置头部标题\r\n */\r\nexport const SET_HEAD_TITLE = 'set_head_title'\r\n\r\n/**\r\n * 接送用户信息\r\n */\r\nexport const RECEIVE_USER = 'receive_user'\r\n\r\n/**\r\n * 显示错误信息\r\n */\r\nexport const SHOW_ERROR_MSG = 'show_error_msg'\r\n\r\n/**\r\n * 重置用户信息\r\n */\r\nexport const RESET_USER = 'reset_user'","/**\r\n * 包含n个action creator函数的模块\r\n * 同步action：对象{type：'xxx', data: 数据值}\r\n * 异步action：函数 dispatch => {}\r\n */\r\n\r\nimport { reqLogin } from \"../api\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\nimport { RECEIVE_USER, RESET_USER, SET_HEAD_TITLE, SHOW_ERROR_MSG } from \"./action-types\";\r\n\r\n/**\r\n * 设置头部标题的同步action\r\n * @param {string} headTitle \r\n * @returns \r\n */\r\nexport const setHeadTitle = headTitle => ({type: SET_HEAD_TITLE, data: headTitle})\r\n\r\n/**\r\n * 接收用户的同步action\r\n * @param {any} user \r\n * @returns \r\n */\r\nexport const receiveUser = user => ({type: RECEIVE_USER, user})\r\n\r\n/**\r\n * 显示错误信息的action\r\n * @param {string} err \r\n * @returns \r\n */\r\n export const showErrorMsg = err => ({type: SHOW_ERROR_MSG, err})\r\n\r\n export const logout = () => {\r\n    //删除 local的user\r\n    storageUtils.removeUser()\r\n    //返回action对象\r\n    return {type: RESET_USER}\r\n }\r\n\r\n/**\r\n * 登录的异步action\r\n * @param {string} username \r\n * @param {string} password \r\n * @returns \r\n */\r\nexport const login = (username, password) => {\r\n    return async dispatch => {\r\n        //1、执行异步ajax请求\r\n        const res = await reqLogin(username, password)\r\n        if (res.status === 0) {\r\n            //2、分发成功的同步action\r\n            const user = res.data\r\n            //保存到localstorage\r\n            storageUtils.saveUser(user)\r\n            //分发接收用户的同步action\r\n            dispatch(receiveUser(user))\r\n        } else {\r\n            //3、分发失败的同步action\r\n            const msg = res.msg\r\n            dispatch(showErrorMsg(msg))\r\n        }\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n} from 'antd'\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/actions'\r\n\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const {username, password} = values\r\n        \r\n        //调用分发异步action的函数 => 发登录的异步请求，有了结果后更新状态\r\n        this.props.login(username, password)\r\n\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log('validatePwd()', rule, value)\r\n    if(!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length<4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length>12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render () {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = this.props.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div className={user.err ? 'error-msg show' : 'error-msg'}>{user.err}</div>\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({\r\n    user: state.user\r\n  }),\r\n  {login}\r\n)(WrapLogin)\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd'\r\n\r\nimport LinkButton from '../link-button'\r\nimport {getWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport pic from '../../assets/images/WeatherIcon/weather-icon-S2/256/100.png'\r\nimport './index.less'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: '100', // 天气图片url\r\n    weather: '', // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    }, 1000)\r\n  }\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const { now } = await getWeather()\r\n    // 更新状态\r\n    this.setState({\r\n      dayPictureUrl: now.icon,\r\n      weather: now.text\r\n    })\r\n  }\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果有值才说明有匹配的\r\n        if(cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('OK', this)\r\n        // 删除保存的user数据\r\n        this.props.logout()\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount () {\r\n    // 获取当前的时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    this.getWeather()\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {currentTime, weather} = this.state\r\n\r\n    const username = this.props.user.username\r\n    // 得到当前需要显示的title\r\n    const title = this.props.headTitle //this.getTitle()\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={pic} alt=\"目力\" />\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    headTitle: state.headTitle,\r\n    user: state.user\r\n  }),\r\n  { logout }\r\n)(withRouter(Header))","import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd';\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport { connect } from 'react-redux';\r\nimport { setHeadTitle } from '../../redux/actions';\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map(item => {\r\n      if(!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        // 向pre添加<Menu.Item>\r\n        if(!item.children) {\r\n\r\n          //判断item是否是当前对应的item\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            //更新redux中的headerTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  componentWillMount () {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    console.log('render()', path)\r\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default connect(\r\n  state => ({\r\n    user: state.user\r\n  }),\r\n  { setHeadTitle }\r\n)(withRouter(LeftNav))","import React, { Component } from 'react'\r\nimport { Chart, Geom, Axis, Tooltip, Legend } from 'bizcharts'\r\nimport DataSet from '@antv/data-set'\r\n\r\nexport default class Line extends Component {\r\n    render() {\r\n        const data = [\r\n            {\r\n              month: \"Jan\",\r\n              a: 7.0,\r\n              b: 3.9,\r\n              c: 5.9\r\n            },\r\n            {\r\n              month: \"Feb\",\r\n              a: 6.9,\r\n              b: 4.2,\r\n              c: 1.9\r\n            },\r\n            {\r\n              month: \"Mar\",\r\n              a: 9.5,\r\n              b: 5.7,\r\n              c: 3.9\r\n            },\r\n            {\r\n              month: \"Apr\",\r\n              a: 14.5,\r\n              b: 8.5,\r\n              c: 5.5\r\n            },\r\n            {\r\n              month: \"May\",\r\n              a: 18.4,\r\n              b: 11.9,\r\n              c: 8.9\r\n            },\r\n            {\r\n              month: \"Jun\",\r\n              a: 21.5,\r\n              b: 15.2,\r\n              c: 10.0\r\n            },\r\n            {\r\n              month: \"Jul\",\r\n              a: 25.2,\r\n              b: 17.0,\r\n              c: 12.9\r\n            },\r\n            {\r\n              month: \"Aug\",\r\n              a: 26.5,\r\n              b: 16.6,\r\n              c: 15.9\r\n            },\r\n            {\r\n              month: \"Sep\",\r\n              a: 23.3,\r\n              b: 14.2,\r\n              c: 20.7\r\n            },\r\n            {\r\n              month: \"Oct\",\r\n              a: 18.3,\r\n              b: 10.3,\r\n              c: 25.9\r\n            },\r\n            {\r\n              month: \"Nov\",\r\n              a: 13.9,\r\n              b: 6.6,\r\n              c: 30.9\r\n            },\r\n            {\r\n              month: \"Dec\",\r\n              a: 9.6,\r\n              b: 4.8,\r\n              c: 35.9\r\n            }\r\n        ]\r\n        const ds = new DataSet()\r\n        const dv = ds.createView().source(data)\r\n        dv.transform({\r\n            type: 'fold',\r\n            fields: ['a','b','c'],\r\n            // 展开字段集\r\n            key: 'city',\r\n            // key的字段\r\n            value: 'temperature' // value字段\r\n        })\r\n        const cols = {\r\n            month: {\r\n                range: [0, 1]\r\n            }\r\n        }\r\n        return (\r\n            <div style={{float: 'right', width: 750, height: 300}}>\r\n                <Chart height={250} data={dv} scale={cols} forceFit>\r\n                    <Legend></Legend>\r\n                    <Axis name='month'></Axis>\r\n                    <Axis name='temperature' label={{ formatter: val => `${val}万个` }}></Axis>\r\n                    <Tooltip crosshairs={{type: 'y'}}></Tooltip>\r\n                    <Geom \r\n                        type='line'\r\n                        position='month*temperature'\r\n                        size={2}\r\n                        color={'city'}\r\n                        shape={'smooth'}\r\n                    />\r\n                    <Geom\r\n                        type='point'\r\n                        position='month*temperature'\r\n                        size={4}\r\n                        shape='circle'\r\n                        color='city'\r\n                        style={{\r\n                            stroke: '#fff',\r\n                            lineWidth: 1\r\n                        }}\r\n                    ></Geom>\r\n                </Chart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Chart, Geom, Axis, Tooltip } from 'bizcharts'\r\n\r\nexport default class Bar extends Component {\r\n    render() {\r\n        const data = [\r\n            {\r\n              year: \"1月\",\r\n              sales: 38\r\n            },\r\n            {\r\n              year: \"2月\",\r\n              sales: 52\r\n            },\r\n            {\r\n              year: \"3月\",\r\n              sales: 61\r\n            },\r\n            {\r\n              year: \"4月\",\r\n              sales: 145\r\n            },\r\n            {\r\n              year: \"5月\",\r\n              sales: 48\r\n            },\r\n            {\r\n              year: \"6月\",\r\n              sales: 38\r\n            },\r\n            {\r\n              year: \"7月\",\r\n              sales: 28\r\n            },\r\n            {\r\n              year: \"8月\",\r\n              sales: 38\r\n            },\r\n            {\r\n              year: \"59月\",\r\n              sales: 68\r\n            },\r\n            {\r\n              year: \"10月\",\r\n              sales: 38\r\n            },\r\n            {\r\n              year: \"11月\",\r\n              sales: 58\r\n            },\r\n            {\r\n              year: \"12月\",\r\n              sales: 38\r\n            }\r\n        ]\r\n        const cols = {\r\n            sales: {\r\n                tickInterval: 20\r\n            }\r\n        }\r\n        return (\r\n            <div style={{width: '100%', marginLeft: -30}}>\r\n                <Chart height={338} data={data} scale={cols} forceFit>\r\n                    <Axis name='year'></Axis>\r\n                    <Axis name='sales'></Axis>\r\n                    <Tooltip crosshairs={{type: 'y'}} />\r\n                    <Geom type='interval' position='year*sales'></Geom>\r\n                </Chart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Card, Icon, Statistic, DatePicker, Timeline } from 'antd'\r\nimport moment from 'moment'\r\nimport Line from './line'\r\nimport Bar from './bar'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        isVisited: true\r\n    }\r\n\r\n    handleChange = (isVisited) => {\r\n        return () => this.setState({ isVisited })\r\n    }\r\n\r\n    render() {\r\n        const { isVisited } = this.state\r\n\r\n        return (\r\n            <div className='home'>\r\n                <Card\r\n                    className=\"home-card\"\r\n                    title=\"商品总量\"\r\n                    extra={<Icon style={{ color: 'rgba(0,0,0,.45)' }} type=\"question-circle\" />}\r\n                    style={{ width: 250 }}\r\n                    headStyle={{ color: 'rgba(0,0,0,.45)' }}\r\n                >\r\n                    <Statistic\r\n                        value={1128163}\r\n                        suffix=\"个\"\r\n                        style={{ fontWeight: 'bolder' }}\r\n                    />\r\n                    <Statistic\r\n                        value={15}\r\n                        valueStyle={{ fontSize: 15 }}\r\n                        prefix={'周同比'}\r\n                        suffix={<div>%<Icon style={{ color: 'red', marginLeft: 10 }} type=\"arrow-down\" /></div>}\r\n                    />\r\n                    <Statistic\r\n                        value={10}\r\n                        valueStyle={{ fontSize: 15 }}\r\n                        prefix={'日同比'}\r\n                        suffix={<div>%<Icon style={{ color: '#3f8600', marginLeft: 10 }} type=\"arrow-up\" /></div>}\r\n                    />\r\n                </Card>\r\n\r\n                <Line />\r\n\r\n                <Card\r\n                    className=\"home-content\"\r\n                    title={<div className=\"home-menu\">\r\n                        <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                            onClick={this.handleChange(true)}>访问量</span>\r\n                        <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n                    </div>}\r\n                    extra={<RangePicker\r\n                        defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n                        format={dateFormat}\r\n                    />}\r\n                >\r\n                    <Card\r\n                        className=\"home-table-left\"\r\n                        title={isVisited ? '访问趋势' : '销售趋势'}\r\n                        bodyStyle={{ padding: 0, height: 275 }}\r\n                        extra={<Icon type=\"reload\" />}\r\n                    >\r\n                        <Bar />\r\n                    </Card>\r\n\r\n                    <Card title='任务' extra={<Icon type=\"reload\" />} className=\"home-table-right\">\r\n                        <Timeline>\r\n                            <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n                            <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n                            <Timeline.Item color=\"red\">\r\n                                <p>联调接口</p>\r\n                                <p>功能验收</p>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <p>登录功能设计</p>\r\n                                <p>权限验证</p>\r\n                                <p>页面排版</p>\r\n                            </Timeline.Item>\r\n                        </Timeline>\r\n                    </Card>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categorys, parentId} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0' key='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option value={c._id} key={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categoryName} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  message,\r\n  Modal\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/*\r\n商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类的名称',\r\n        dataIndex: 'name', // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => ( // 返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  异步获取一级/二级分类列表显示\r\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n   */\r\n  getCategorys = async (parentId) => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n        console.log('----', this.state.categorys.length)\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n    console.log('updateCategory()')\r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  为第一次render()准备数据\r\n   */\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  /*\r\n  执行异步任务: 发异步ajax请求\r\n   */\r\n  componentDidMount () {\r\n    // 获取一级分类列表显示\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取状态数据\r\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\r\n    // 读取指定的分类\r\n    const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport Reactcharts from 'echarts-for-react'\r\n\r\n/**\r\n * 后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n    state = {\r\n        GTA: [55, 70, 90, 120, 140, 150],//给她爱\r\n        RE8: [56, 69, 95, 125, 139, 152],//生化危机8\r\n    }\r\n\r\n    update = () => {\r\n        this.setState( state => ({\r\n            GTA: state.GTA.map( g => ++g),\r\n            RE8: state.RE8.reduce( (pre, cur) => {\r\n                pre.push(--cur)\r\n                return pre\r\n            } , []),\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * 返回柱状图的配置对象\r\n     * @param {any[]} GTA \r\n     * @param {any[]} RE8 \r\n     * @returns \r\n     */\r\n    getOption  = (GTA, RE8) => {\r\n        return {\r\n            title: {\r\n                text: '4k 光追帧数'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['GTA', 'Resident Evil 8']\r\n            },\r\n            xAxis: {\r\n                data: [\"RTX3060\",\"RTX3060Ti\",\"RTX3070\",\"RTX3080\",\"RTX3080Ti\",\"RTX3090\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: 'GTA',\r\n                type: 'bar',\r\n                data: GTA\r\n            },{\r\n                name: 'Resident Evil 8',\r\n                type: 'bar',\r\n                data: RE8\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { GTA, RE8 } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n\r\n                <Card title='柱状图一'>\r\n                    <Reactcharts option={this.getOption(GTA, RE8)}></Reactcharts>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport Reactcharts from 'echarts-for-react'\r\n\r\n/**\r\n * 后台管理的柱状图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n    state = {\r\n        GTA: [55, 70, 90, 120, 140, 150],//给她爱\r\n        RE8: [56, 69, 95, 125, 139, 152],//生化危机8\r\n    }\r\n\r\n    update = () => {\r\n        this.setState( state => ({\r\n            GTA: state.GTA.map( g => ++g),\r\n            RE8: state.RE8.reduce( (pre, cur) => {\r\n                pre.push(--cur)\r\n                return pre\r\n            } , []),\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * 返回柱状图的配置对象\r\n     * @param {any[]} GTA \r\n     * @param {any[]} RE8 \r\n     * @returns \r\n     */\r\n    getOption  = (GTA, RE8) => {\r\n        return {\r\n            title: {\r\n                text: '4k 光追帧数'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['GTA', 'Resident Evil 8']\r\n            },\r\n            xAxis: {\r\n                data: [\"RTX3060\",\"RTX3060Ti\",\"RTX3070\",\"RTX3080\",\"RTX3080Ti\",\"RTX3090\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: 'GTA',\r\n                type: 'line',\r\n                data: GTA\r\n            },{\r\n                name: 'Resident Evil 8',\r\n                type: 'line',\r\n                data: RE8\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { GTA, RE8 } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n\r\n                <Card title='折线图一'>\r\n                    <Reactcharts option={this.getOption(GTA, RE8)}></Reactcharts>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/**\r\n * 后台管理的柱状图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n    getOption = () => {\r\n        return {\r\n          title : {\r\n            text: '某站点用户访问来源',\r\n            subtext: '纯属虚构',\r\n            x:'center'\r\n          },\r\n          tooltip : {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n          },\r\n          series : [\r\n            {\r\n              name: '访问来源',\r\n              type: 'pie',\r\n              radius : '55%',\r\n              center: ['50%', '60%'],\r\n              data:[\r\n                {value:335, name:'直接访问'},\r\n                {value:310, name:'邮件营销'},\r\n                {value:234, name:'联盟广告'},\r\n                {value:135, name:'视频广告'},\r\n                {value:1548, name:'搜索引擎'}\r\n              ],\r\n              itemStyle: {\r\n                emphasis: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n    \r\n      }\r\n    \r\n      getOption2 = () => {\r\n        return {\r\n          backgroundColor: '#2c343c',\r\n    \r\n          title: {\r\n            text: 'Customized Pie',\r\n            left: 'center',\r\n            top: 20,\r\n            textStyle: {\r\n              color: '#ccc'\r\n            }\r\n          },\r\n    \r\n          tooltip : {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n          },\r\n    \r\n          visualMap: {\r\n            show: false,\r\n            min: 80,\r\n            max: 600,\r\n            inRange: {\r\n              colorLightness: [0, 1]\r\n            }\r\n          },\r\n          series : [\r\n            {\r\n              name:'访问来源',\r\n              type:'pie',\r\n              radius : '55%',\r\n              center: ['50%', '50%'],\r\n              data:[\r\n                {value:335, name:'直接访问'},\r\n                {value:310, name:'邮件营销'},\r\n                {value:274, name:'联盟广告'},\r\n                {value:235, name:'视频广告'},\r\n                {value:400, name:'搜索引擎'}\r\n              ].sort(function (a, b) { return a.value - b.value; }),\r\n              roseType: 'radius',\r\n              label: {\r\n                normal: {\r\n                  textStyle: {\r\n                    color: 'rgba(255, 255, 255, 0.3)'\r\n                  }\r\n                }\r\n              },\r\n              labelLine: {\r\n                normal: {\r\n                  lineStyle: {\r\n                    color: 'rgba(255, 255, 255, 0.3)'\r\n                  },\r\n                  smooth: 0.2,\r\n                  length: 10,\r\n                  length2: 20\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#c23531',\r\n                  shadowBlur: 200,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              },\r\n    \r\n              animationType: 'scale',\r\n              animationEasing: 'elasticOut',\r\n              animationDelay: function (idx) {\r\n                return Math.random() * 200;\r\n              }\r\n            }\r\n          ]\r\n        };\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div>\r\n            <Card title='饼图一'>\r\n              <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n            </Card>\r\n            <Card title='饼图二'>\r\n              <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","import React, { Component } from 'react'\r\nimport { Upload, Modal, message, Icon } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\nimport PropTypes from 'prop-types'\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends Component {\r\n    \r\n    static propTypes = {\r\n        imgs: PropTypes.array\r\n    }\r\n\r\n    state = {\r\n        previewVisible: false, // 标识是否显示大图预览Modal\r\n        previewImage: '', // 大图的url\r\n        fileList: [\r\n          /*{\r\n            uid: '-1', // 每个file都有自己唯一的id\r\n            name: 'xxx.png', // 图片文件名\r\n            status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n            url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n          },*/\r\n        ],\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n\r\n        let fileList = []\r\n        // 如果传入了imgs属性\r\n        const {imgs} = this.props\r\n        if (imgs && imgs.length>0) {\r\n            fileList = imgs.map((img, index) => ({\r\n                uid: -index, // 每个file都有自己唯一的id\r\n                name: img, // 图片文件名\r\n                status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n                url: BASE_IMG_URL + img\r\n            }))\r\n        }\r\n\r\n        // 初始化状态\r\n        this.state = {\r\n            previewVisible: false, // 标识是否显示大图预览Modal\r\n            previewImage: '', // 大图的url\r\n            fileList // 所有已上传图片的数组\r\n        }\r\n    }\r\n\r\n    /*\r\n    获取所有已上传图片文件名的数组\r\n    */\r\n    getImgs  = () => {\r\n        return this.state.fileList.map(file => file.name)\r\n    }\r\n    /*\r\n    隐藏Modal\r\n    */\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n    \r\n    handlePreview = file => {\r\n        console.log('handlePreview()', file)\r\n        // 显示指定file对应的大图\r\n        this.setState({\r\n          previewImage: file.url || file.thumbUrl,\r\n          previewVisible: true,\r\n        });\r\n    };\r\n    \r\n    /*\r\n    file: 当前操作的图片文件(上传/删除)\r\n    fileList: 所有已上传图片文件对象的数组\r\n    */\r\n    handleChange = async ({ file, fileList }) => {\r\n        console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n        // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n        if(file.status==='done') {\r\n            const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n            if(result.status===0) {\r\n                message.success('上传图片成功!')\r\n                const {name, url} = result.data\r\n                file = fileList[fileList.length-1]\r\n                file.name = name\r\n                file.url = url\r\n            } else {\r\n                message.error('上传图片失败')\r\n            }\r\n        } else if (file.status==='removed') { // 删除图片\r\n            const result = await reqDeleteImg(file.name)\r\n            if (result.status===0) {\r\n                message.success('删除图片成功!')\r\n            } else {\r\n                message.error('删除图片失败!')\r\n            }\r\n        }\r\n\r\n        // 在操作(上传/删除)过程中更新fileList状态\r\n        this.setState({ fileList })\r\n    };\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n          <div>\r\n            <Icon type=\"plus\" />\r\n            <div>Upload</div>\r\n          </div>\r\n        );\r\n        return (\r\n            <div>\r\n                 <Upload\r\n                    action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n                    accept='image/*'  /*只接收图片格式*/\r\n                    name='image' /*请求参数名*/\r\n                    listType=\"picture-card\"  /*卡片样式*/\r\n                    fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                    >\r\n                    {fileList.length >= 4 ? null : uploadButton}\r\n                </Upload>\r\n\r\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport default class RichTextEditor extends Component {\r\n     \r\n    static propTypes = {\r\n        detail: PropTypes.string\r\n    }\r\n    \r\n    state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const html = this.props.detail\r\n        if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n            const contentBlock = htmlToDraft(html)\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n            const editorState = EditorState.createWithContent(contentState)\r\n            this.state = {\r\n                editorState,\r\n            }\r\n        } else {\r\n            this.state = {\r\n                editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    输入过程中实时的回调\r\n    */\r\n    onEditorStateChange = (editorState) => {\r\n        console.log('onEditorStateChange()')\r\n        this.setState({\r\n            editorState,\r\n        })\r\n    }\r\n\r\n    getDetail = () => {\r\n        // 返回输入数据对应的html格式的文本\r\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n    }\r\n\r\n    uploadImageCallBack = (file) => {\r\n        return new Promise(\r\n            (resolve, reject) => {\r\n                const xhr = new XMLHttpRequest()\r\n                xhr.open('POST', '/manage/img/upload')\r\n                const data = new FormData()\r\n                data.append('image', file)\r\n                xhr.send(data)\r\n                xhr.addEventListener('load', () => {\r\n                    const response = JSON.parse(xhr.responseText)\r\n                    const url = response.data.url // 得到图片的url\r\n                    resolve({data: {link: url}})\r\n                })\r\n                xhr.addEventListener('error', () => {\r\n                    const error = JSON.parse(xhr.responseText)\r\n                    reject(error)\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {editorState} = this.state\r\n        return (\r\n            <Editor\r\n                editorState={editorState}\r\n                editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n                onEditorStateChange={this.onEditorStateChange}\r\n                toolbar={{\r\n                    image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { \r\n    Card,\r\n    Input,\r\n    Icon,\r\n    Button,\r\n    Cascader,\r\n    Form,\r\n    message\r\n} from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqAddOrUpdateProduct, reqCategorys } from '../../api'\r\nimport PicturesWall from './pictrues-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\n\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\n/**\r\n * product添加和更新（修改）的子路由组件\r\n */\r\nclass ProductAddUpdate extends Component {\r\n\r\n    state = {\r\n        options: []\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n\r\n        // 创建用来保存ref标识的标签对象的容器\r\n        this.pw = React.createRef()\r\n        this.editor = React.createRef()\r\n    }\r\n\r\n    submit = () => {\r\n        //进行表单验证，如果通过了才发送请求\r\n        this.props.form.validateFields(async (error, values) => {\r\n            if (!error) {\r\n                //1、收集数据,并封装成product对象\r\n                const { name, price, desc, categoryIds } = values\r\n                let pCategoryId, categoryId\r\n                if (categoryIds.length === 1) {\r\n                    pCategoryId = '0'\r\n                    categoryId = categoryIds[0]\r\n                } else {\r\n                    pCategoryId = categoryIds[0]\r\n                    categoryId = categoryIds[1]\r\n                }\r\n                const imgs = this.pw.current.getImgs()\r\n                const detail = this.editor.current.getDetail()\r\n                const product = { name, price, desc, imgs, detail, pCategoryId, categoryId }\r\n                //如果是更新，需要_id\r\n                if (this.isUpdate) {\r\n                    product._id = this.product._id\r\n                }\r\n                //2、调用接口请求函数去添加、更新\r\n                const res = await reqAddOrUpdateProduct(product)\r\n                //3、根据结果显示\r\n                if (res.status === 0) {\r\n                    message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n                    this.props.history.goBack()\r\n                } else {\r\n                    message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 验证价格\r\n     * @param {*} rule \r\n     * @param {*} value \r\n     * @param {*} callback \r\n     */\r\n    validatePrice = ( rule, value, callback) => {\r\n        if (value*1 > 0) {\r\n            callback()//验证通过\r\n        } else {\r\n            callback('价格必须大于0')//验证没通过\r\n        }\r\n    }\r\n\r\n    initOptions = async categorys => {\r\n        //根据categorys生成options数组\r\n        const options = categorys.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: false\r\n        }))\r\n\r\n        //如果是一个二级分类商品的更新\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId } = product\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            //获取二级分类列表\r\n            const subCategorys = await this.getCategorys(pCategoryId)\r\n            //生成二级下拉列表的options\r\n            const childOptions = subCategorys.map(c => ({\r\n                value: c._id,\r\n                label: c.name,\r\n                isLeaf: true\r\n            }))\r\n            //找到当前商品对应的一级option对象\r\n            const targetOption = options.find(option => option.value === pCategoryId)\r\n            // 关联对应的一级option上\r\n            targetOption.children = childOptions\r\n        }\r\n        //更新options\r\n        this.setState({options})\r\n    }\r\n\r\n    /**\r\n     * 异步获取一级、二级分类列表，并显示\r\n     * async函数的返回值是一个新的promise对象，promise的结果和值由async的结果来决定\r\n     * @param {number} parentId \r\n     */\r\n    getCategorys = async (parentId) => {\r\n        const res = await reqCategorys(parentId)\r\n        if (res.status === 0) {\r\n            const categorys = res.data\r\n            if (parentId === '0') {\r\n                //一级列表\r\n                this.initOptions(categorys)\r\n            } else {\r\n                //二级列表\r\n                return categorys//当前async函数返回的promise就会成功并且值为categorys\r\n            }\r\n        }\r\n    }\r\n\r\n    /**用于加载下级列表的回调函数 */\r\n    loadData = async selectedOptions => {\r\n        // 得到选择的option对象\r\n        const targetOption = selectedOptions[0]\r\n        // 显示loading\r\n        targetOption.loading = true\r\n    \r\n        // 根据选中的分类, 请求获取二级分类列表\r\n        const subCategorys = await this.getCategorys(targetOption.value)\r\n        // 隐藏loading\r\n        targetOption.loading = false\r\n        // 二级分类数组有数据\r\n        if (subCategorys && subCategorys.length>0) {\r\n          // 生成一个二级列表的options\r\n          const childOptions = subCategorys.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: true\r\n          }))\r\n          // 关联到当前option上\r\n          targetOption.children = childOptions\r\n        } else { // 当前选中的分类没有二级分类\r\n          targetOption.isLeaf = true\r\n        }\r\n    \r\n        //更新options状态\r\n        this.setState({\r\n          options: [...this.state.options],\r\n        })\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.getCategorys('0')\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        //取出state\r\n        const product = this.props.location.state//如果是添加则没值，反之则有值\r\n        //保存是否是更新的标识\r\n        this.isUpdate = !!product\r\n        // 保存商品(如果没有, 保存是{})\r\n        this.product = product || {}\r\n    }\r\n\r\n    render() {\r\n        const {isUpdate, product} = this\r\n        const {pCategoryId, categoryId, imgs, detail} = product\r\n\r\n        //用来接收级联分类ID的数组\r\n        const categoryIds = []\r\n        if (isUpdate) {\r\n            //商品是个一级分类商品\r\n            if (pCategoryId === '0') {\r\n                categoryIds.push(categoryId)\r\n            } else {\r\n                //商品是个二级分类商品\r\n                categoryIds.push(pCategoryId)\r\n                categoryIds.push(categoryId)\r\n            }\r\n            \r\n        }\r\n\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick={() => this.props.history.goBack()}>\r\n                    <Icon type='arrow-left'></Icon>\r\n                </LinkButton>\r\n                <span>{isUpdate ? '更新商品' : '添加商品'}</span>\r\n            </span>\r\n        )\r\n\r\n        // 指定Item布局的配置对象\r\n        const formItemLayout = {\r\n            labelCol: {span: 2},//左侧label的宽度\r\n            wrapperCol: {span: 8}//右侧包裹的宽度\r\n        }\r\n\r\n        const {getFieldDecorator} = this.props.form\r\n\r\n        return (\r\n           <Card title={title}>\r\n               <Form {...formItemLayout}>\r\n                    <Item label='商品名称'>\r\n                        {\r\n                            getFieldDecorator('name', {\r\n                                initialValue: product.name,\r\n                                rules: [\r\n                                    {required: true, message: '必须输入商品名称'}\r\n                                ]\r\n                            })(\r\n                                <Input placeholder='请输入商品名'></Input>\r\n                            )\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品描述'>\r\n                        {\r\n                            getFieldDecorator('desc', {\r\n                                initialValue: product.desc,\r\n                                rules: [\r\n                                    {required: true, message: '必须输入商品描述'}\r\n                                ]\r\n                            })(\r\n                                <TextArea placeholder='请输入商品描述' autoSize={{minRows: 2, maxRows: 6}}></TextArea>\r\n                            )\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品价格'>\r\n                        {\r\n                            getFieldDecorator('price', {\r\n                                initialValue: product.price,\r\n                                rules: [\r\n                                    {required: true, message: '必须输入商品价格'},\r\n                                    {validator: this.validatePrice}\r\n                                ]\r\n                            })(\r\n                                <Input placeholder='请输入商品价格' type='number' addonAfter='元'></Input>\r\n                            )\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品分类'>\r\n                        {\r\n                            getFieldDecorator('categoryIds', {\r\n                                initialValue: categoryIds,\r\n                                rules: [\r\n                                    {required: true, message: '必须指定商品分类'}\r\n                                ]\r\n                            })(\r\n                                <Cascader \r\n                                    placeholder='请指定商品分类'\r\n                                    options={this.state.options}//需要显示的列表数据数组\r\n                                    loadData={this.loadData}//当选择某个列表项，加载下一级列表的监听回调\r\n                                />\r\n                            )\r\n                        }\r\n                    </Item>\r\n                    <Item label='商品图片'>\r\n                        <PicturesWall ref={this.pw} imgs={imgs}/>\r\n                    </Item>\r\n                    <Item label='商品详情' labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n                        <RichTextEditor ref={this.editor} detail={detail}></RichTextEditor>\r\n                    </Item>\r\n                    <Item>\r\n                        <Button type='primary' onClick={this.submit}>提交</Button>\r\n                    </Item>\r\n               </Form>\r\n           </Card>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(ProductAddUpdate)\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Icon,\r\n    List\r\n} from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\nimport { reqCategory } from '../../api'\r\n\r\nconst Item = List.Item\r\n\r\nexport default class ProductDetail extends Component {\r\n\r\n    state = {\r\n        cName1: '',//一级分类名称\r\n        cName2: '',//二级分类名称\r\n    }\r\n\r\n    async componentDidMount () {\r\n        //得到当前商品的分类id\r\n        const { pCategoryId, categoryId } = this.props.location.state.product\r\n        if (pCategoryId === '0') {\r\n            //一级分类下的商品\r\n            const res = await reqCategory(categoryId)\r\n            if (res.status === 0) {\r\n                const cName1 = res.data.name\r\n                this.setState({cName1})\r\n            }\r\n        } else {\r\n            //二级分类下的商品\r\n            //通过多个await方式发多个请求：后面一个请求是在前面一个请求成功返回之后才发送\r\n            // const res1 = await reqCategory(pCategoryId)//获取一级分类列表\r\n            // const res2 = await reqCategory(categoryId)//获取二级分类列表\r\n            // const cName1 = res1.data.name\r\n            // const cName2 = res2.data.name\r\n            //一次发多个请求，只有都成功了才正常处理，这样效果是一样的，但是效率会更高\r\n            const ress = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n            const cName1 = ress[0].data.name\r\n            const cName2 = ress[1].data.name\r\n            this.setState({cName1, cName2})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        //读取携带过来的state数据\r\n        const {name, desc, price, detail, imgs} = this.props.location.state.product\r\n        const { cName1, cName2 } = this.state\r\n        const title = (\r\n            <span>\r\n                <LinkButton>\r\n                    <Icon \r\n                        type='arrow-left' \r\n                        style={{marginRight: 15, fontSize: 20}}\r\n                        onClick={()=>this.props.history.goBack()}\r\n                    ></Icon>\r\n                </LinkButton>\r\n                <span>商品详情</span>\r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title} className='product-detail'>\r\n                <List>\r\n                    <Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className='left'>商品名称: </span>\r\n                        <span className=''>{name}</span>\r\n                    </Item>\r\n                    <Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className='left'>商品描述: </span>\r\n                        <span className=''>{desc}</span>\r\n                    </Item>\r\n                    <Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className='left'>价格: </span>\r\n                        <span className=''>{price}</span>\r\n                    </Item>\r\n                    <Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className='left'>所属分类: </span>\r\n                        {\r\n\r\n                        }\r\n                        <span className=''>{ cName1 }{ cName2 ? `——>${cName2}` : '' }</span>\r\n                    </Item>\r\n                    <Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className='left'>商品图片: </span>\r\n                        <span className=''>\r\n                        {\r\n                            imgs.map( img => (\r\n                                <img className='product-img' key={img} src={BASE_IMG_URL + img} alt=\"img\" />\r\n                            ))\r\n                        }\r\n                        </span>\r\n                    </Item>\r\n                    <Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className='left'>商品详情: </span>\r\n                        <span className='' dangerouslySetInnerHTML={{__html: detail}}></span>\r\n                    </Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Icon,\r\n    Table,\r\n    message\r\n} from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from '../../api'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n\r\nconst Option = Select.Option\r\n\r\n/**\r\n * product的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n    state = {\r\n        products: [\r\n            {\r\n                \"status\": 1,\r\n                \"imgs\": [\r\n                    \"image-1559402396338.jpg\"\r\n                ],\r\n                \"_id\": \"5ca9e05db49ef916541160cd\",\r\n                \"name\": \"联想ThinkPad 翼4809\",\r\n                \"desc\": \"年度重量级新品，X390、T490全新登场 更加轻薄机身设计9\",\r\n                \"price\": 65999,\r\n                \"pCategoryId\": \"5ca9d6c0b49ef916541160bb\",\r\n                \"categoryId\": \"5ca9db9fb49ef916541160cc\",\r\n                \"detail\": \"<p><span style=\\\"color: rgb(228,57,60);background-color: rgb(255,255,255);font-size: 12px;\\\">想你所需，超你所想！精致外观，轻薄便携带光驱，内置正版office杜绝盗版死机，全国联保两年！</span> 222</p>\\n<p><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\">联想（Lenovo）扬天V110 15.6英寸家用轻薄便携商务办公手提笔记本电脑 定制【E2-9010/4G/128G固态】 2G独显 内置</span></p>\\n<p><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\">99999</span></p>\\n\",\r\n                \"__v\": 0\r\n            },\r\n            {\r\n                \"status\": 1,\r\n                \"imgs\": [\r\n                    \"image-1559402448049.jpg\",\r\n                    \"image-1559402450480.jpg\"\r\n                ],\r\n                \"_id\": \"5ca9e414b49ef916541160ce\",\r\n                \"name\": \"华硕(ASUS) 飞行堡垒\",\r\n                \"desc\": \"15.6英寸窄边框游戏笔记本电脑(i7-8750H 8G 256GSSD+1T GTX1050Ti 4G IPS)\",\r\n                \"price\": 6799,\r\n                \"pCategoryId\": \"5ca9d6c0b49ef916541160bb\",\r\n                \"categoryId\": \"5ca9db8ab49ef916541160cb\",\r\n                \"detail\": \"<p><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\">华硕(ASUS) 飞行堡垒6 15.6英寸窄边框游戏笔记本电脑(i7-8750H 8G 256GSSD+1T GTX1050Ti 4G IPS)火陨红黑</span>&nbsp;</p>\\n<p><span style=\\\"color: rgb(228,57,60);background-color: rgb(255,255,255);font-size: 12px;\\\">【4.6-4.7号华硕集体放价，大牌够品质！】1T+256G高速存储组合！超窄边框视野无阻，强劲散热一键启动！</span>&nbsp;</p>\\n\",\r\n                \"__v\": 0\r\n            },\r\n            {\r\n                \"status\": 2,\r\n                \"imgs\": [\r\n                    \"image-1559402436395.jpg\"\r\n                ],\r\n                \"_id\": \"5ca9e4b7b49ef916541160cf\",\r\n                \"name\": \"你不知道的JS（上卷）\",\r\n                \"desc\": \"图灵程序设计丛书： [You Don't Know JS:Scope & Closures] JavaScript开发经典入门图书 打通JavaScript的任督二脉\",\r\n                \"price\": 35,\r\n                \"pCategoryId\": \"0\",\r\n                \"categoryId\": \"5ca9d6c9b49ef916541160bc\",\r\n                \"detail\": \"<p style=\\\"text-align:start;\\\"><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\">图灵程序设计丛书：你不知道的JavaScript（上卷）</span> <span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\"><strong>[You Don't Know JS:Scope &amp; Closures]</strong></span></p>\\n<p style=\\\"text-align:start;\\\"><span style=\\\"color: rgb(227,57,60);background-color: rgb(255,255,255);font-size: 12px;\\\">JavaScript开发经典入门图书 打通JavaScript的任督二脉 领略语言内部的绝美风光</span>&nbsp;</p>\\n\",\r\n                \"__v\": 0\r\n            },\r\n            {\r\n                \"status\": 2,\r\n                \"imgs\": [\r\n                    \"image-1554638240202.jpg\"\r\n                ],\r\n                \"_id\": \"5ca9e5bbb49ef916541160d0\",\r\n                \"name\": \"美的(Midea) 213升-BCD-213TM\",\r\n                \"desc\": \"爆款直降!大容量三口之家优选! *节能养鲜,自动低温补偿,36分贝静音呵护\",\r\n                \"price\": 1388,\r\n                \"pCategoryId\": \"5ca9d695b49ef916541160ba\",\r\n                \"categoryId\": \"5ca9d9cfb49ef916541160c4\",\r\n                \"detail\": \"<p style=\\\"text-align:start;\\\"><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;font-family: Arial, \\\"microsoft yahei;\\\">美的(Midea) 213升 节能静音家用三门小冰箱 阳光米 BCD-213TM(E)</span></p>\\n<p><span style=\\\"color: rgb(228,57,60);background-color: rgb(255,255,255);font-size: 12px;font-family: tahoma, arial, \\\"Microsoft YaHei\\\", \\\"Hiragino Sans GB\\\", u5b8bu4f53, sans-serif;\\\">【4.8美的大牌秒杀日】爆款直降!大容量三口之家优选! *节能养鲜,自动低温补偿,36分贝静音呵护! *每天不到一度电,省钱又省心!</span>&nbsp;</p>\\n\",\r\n                \"__v\": 0\r\n            },\r\n            {\r\n                \"status\": 1,\r\n                \"imgs\": [\r\n                    \"image-1554638403550.jpg\"\r\n                ],\r\n                \"_id\": \"5ca9e653b49ef916541160d1\",\r\n                \"name\": \"美的（Midea）KFR-35GW/WDAA3\",\r\n                \"desc\": \"正1.5匹 变频 智弧 冷暖 智能壁挂式卧室空调挂机\",\r\n                \"price\": 2499,\r\n                \"pCategoryId\": \"5ca9d695b49ef916541160ba\",\r\n                \"categoryId\": \"5ca9da1ab49ef916541160c6\",\r\n                \"detail\": \"<p style=\\\"text-align:start;\\\"><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\">美的（Midea）正1.5匹 变频 智弧 冷暖 智能壁挂式卧室空调挂机 KFR-35GW/WDAA3@</span></p>\\n<p style=\\\"text-align:start;\\\"></p>\\n<p><span style=\\\"color: rgb(228,57,60);background-color: rgb(255,255,255);font-size: 12px;\\\">【4.8美的大牌秒杀日】提前加入购物车！2299元成交价！前50名下单送赠品加湿型电风扇，赠完即止！8日0点开抢！</span><a href=\\\"https://sale.jd.com/mall/LKHdqZUIYk.html\\\" target=\\\"_blank\\\"><span style=\\\"color: rgb(94,105,173);background-color: rgb(255,255,255);font-size: 12px;\\\">更有无风感柜挂组合套购立减500元！猛戳！！</span></a>&nbsp;</p>\\n\",\r\n                \"__v\": 0\r\n            }\r\n        ],//商品的数组\r\n        total: 0,//商品的总数量\r\n        loading: false,//加载状态\r\n        searchName: '',//搜索的关键字   \r\n        searchType: 'productName',//根据哪个字段搜索\r\n    }\r\n\r\n   \r\n    /**\r\n     * 初始化表格的列的数组\r\n     */\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '描述',\r\n                dataIndex: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                render: price => '￥' + price //当前指定了对应的属性，传入的是对应的属性值\r\n            },\r\n            {\r\n                title: '状态',\r\n                //dataIndex: 'status',\r\n                width: 100,\r\n                render: product => {\r\n                    const {_id, status} = product\r\n                    const newStatus = status === 1 ? 2 : 1\r\n                    return (\r\n                        <span>\r\n                            <Button type='primary' onClick={() => this.updateStatus(_id, newStatus)}>{status === 1 ? '下架' : '上架'}</Button>\r\n                            <span>{status === 1 ? '在售' : '已下架'}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: 100,\r\n                render: (product) => {\r\n                    return (\r\n                        <span>\r\n                            {/* 将product对象使用state传递给目标路由组件 */}\r\n                            <LinkButton onClick={() => this.props.history.push('/product/detail', {product})}>详情</LinkButton>\r\n                            <LinkButton onClick={() => this.props.history.push('/product/addupdate', product)}>修改</LinkButton>\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * 更新指定商品的状态\r\n     * @param {number} id \r\n     * @param {number} status \r\n     */\r\n    updateStatus = async (id, status) => {\r\n        const res = await reqUpdateStatus(id, status)\r\n        if (res.status === 0) {\r\n            message.success('更新商品成功')\r\n            this.getProucts(this.pageNum || 1)\r\n        }\r\n    }\r\n\r\n    getProucts = async (pageNum) => {\r\n        this.pageNum = pageNum//保存当前页数，让其他方法可以看到\r\n        this.setState({loading: true})//显示loading\r\n\r\n        const { searchName, searchType } = this.state\r\n        let res\r\n        //如果搜索关键字有值，说明我们要做搜索分页\r\n        if (searchName) {\r\n            res = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n        } else {\r\n            //一般分页请求\r\n            res = await reqProducts(pageNum, PAGE_SIZE)\r\n        }\r\n        this.setState({loading: false})//隐藏loading\r\n        if (res.status === 0) {\r\n            const { total, list } = res.data\r\n            this.setState({\r\n                total,\r\n                products: list\r\n            })\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getProucts(1)\r\n    }\r\n\r\n    render() {\r\n        //取出状态数据\r\n        const { products, total, loading, searchType, searchName } = this.state\r\n\r\n        const title = (\r\n            <span>\r\n                <Select value={searchType} style={{width: 150}} onChange={value => this.setState({searchType: value})}>\r\n                    <Option value='productName'>按名称搜索</Option>\r\n                    <Option value='productDesc'>按描述搜索</Option>\r\n                </Select>\r\n                <Input placeholder='关键字' style={{width: 150, margin: '0 15px'}} value={searchName} onChange={event => this.setState({searchName: event.target.value})}/>\r\n                <Button type='primary' onClick={() => this.getProucts(1)}>搜索</Button>\r\n            </span>\r\n        )\r\n\r\n        const extra = (\r\n            <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n                <Icon type='plus'></Icon>\r\n                添加商品\r\n            </Button>    \r\n        )\r\n\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                    dataSource={products}\r\n                    columns={this.columns}\r\n                    loading={loading}\r\n                    bordered\r\n                    rowKey='_id'\r\n                    pagination={{\r\n                        current: this.pageNum,\r\n                        total,  \r\n                        defaultPageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                        onChange: this.getProucts\r\n                    }}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\nimport ProductHome from './home'\r\nimport \"./product.less\";\r\n\r\n/**\r\n * 商品路由\r\n */\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch> \r\n                <Route path='/product' component={ProductHome} exact></Route>{/**路径完全匹配 */}\r\n                <Route path='/product/addupdate' component={ProductAddUpdate}></Route>\r\n                <Route path='/product/detail' component={ProductDetail}></Route>\r\n                <Redirect to='/product'></Redirect>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加角色的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.props.setForm(this.props.form)\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }\r\n\r\n        return (\r\n        <Form>\r\n            <Item label='角色名称' {...formItemLayout}>\r\n            {\r\n                getFieldDecorator('roleName', {\r\n                initialValue: '',\r\n                rules: [\r\n                    {required: true, message: '角色名称必须输入'}\r\n                ]\r\n                })(\r\n                <Input placeholder='请输入角色名称'/>\r\n                )\r\n            }\r\n            </Item>\r\n        </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\nconst Item = Form.Item\r\nconst {TreeNode} = Tree\r\n/*\r\n修改角色的form组件\r\n */\r\nexport default class AuthForm extends Component {\r\n\r\n    static propTypes = {\r\n        role: PropTypes.object\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n\r\n        //根据传入的角色的menus生成初始状态\r\n        const {menus} = this.props.role\r\n        this.state = {\r\n            checkedKeys: menus\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 生成树节点\r\n     * @param {any[]} list \r\n     */\r\n    getTreeNodes = (list) => {\r\n        return list.reduce((pre, item) => {\r\n            pre.push(<TreeNode title={item.title} key={item.key}>\r\n                {\r\n                    item.children && this.getTreeNodes(item.children)\r\n                }\r\n            </TreeNode>)\r\n            return pre\r\n        }, [])\r\n    }\r\n\r\n    //为父组件提交获取最新menus数据的方法\r\n    getMenus = () => this.state.checkedKeys\r\n\r\n    //选中某个node时的回调\r\n    onCheck = checkedKeys => {\r\n        this.setState({checkedKeys})\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.treeNodes = this.getTreeNodes(menuList)\r\n    }\r\n\r\n    //根据新传入的role来更新checkedkeys的状态\r\n    componentWillReceiveProps (nextProps) {\r\n        const menus = nextProps.role.menus\r\n        //这里两个写法是一样的,还没执行render\r\n        this.setState({\r\n            checkedKeys:menus\r\n        })\r\n        //this.state.checkedKeys = menus\r\n    }\r\n\r\n    render() {\r\n        const { role } = this.props\r\n        const { checkedKeys } = this.state\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Item label='角色名称' {...formItemLayout}>\r\n                    <Input value={role.name} disabled/>\r\n                </Item>\r\n\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll={true}\r\n                    checkedKeys={checkedKeys}\r\n                    onCheck={this.onCheck}\r\n                >\r\n                    <TreeNode title='平台权限' key='all'>\r\n                        { this.treeNodes }\r\n                    </TreeNode>\r\n                </Tree>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { \r\n    Card, \r\n    Button,\r\n    Table,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport { reqAddRole, reqRoles, reqUpdateRole } from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions'\r\n\r\nclass Role extends Component {\r\n\r\n    state = {\r\n        roles: [],//所有角色的列表\r\n        role: {},//当前选择角色\r\n        isShowAdd: false,//是否显示添加界面\r\n        isShowAuth: false,//是否显示权限界面\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.auth = React.createRef()\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                render: formateDate\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                render: formateDate\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name'\r\n            },\r\n        ]\r\n    }\r\n\r\n    onRow = (role) => {\r\n        return {\r\n            onClick: event => {\r\n                this.setState({role})\r\n            }\r\n        }\r\n    }\r\n\r\n    getRoles = async () => {\r\n        const res = await reqRoles()\r\n        if (res.status === 0) {\r\n            const roles = res.data\r\n            this.setState({roles})\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加角色\r\n     */\r\n    addRole = () => {\r\n        //进行表单验证\r\n        this.form.validateFields(async (err, value) => {\r\n            if (!err) {\r\n                //收集数据\r\n                const { roleName } = value\r\n                this.form.resetFields()\r\n                //请求添加\r\n                const res = await reqAddRole(roleName)\r\n                //根据结果显示添加成功、失败\r\n                if (res.status === 0) {\r\n                    message.success('添加角色成功')\r\n                    this.setState({\r\n                        isShowAdd: false\r\n                    })\r\n                    this.getRoles()\r\n                } else {\r\n                    message.error('添加角色失败')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置角色权限\r\n     */\r\n    updateRole = async () => {\r\n        const role = this.state.role\r\n        //获取最新的menus、设置时间、设置的人\r\n        const menus = this.auth.current.getMenus()\r\n        role.menus = menus\r\n        role.auth_time = Date.now()\r\n        role.auth_name = this.props.user.username\r\n        //请求更新\r\n        const res = await reqUpdateRole(role)\r\n        if (res.status === 0) {\r\n            if (role._id === this.props.user.role_id) {\r\n                this.props.logout()\r\n                message.success('当前用户角色权限修改了，重新登录')\r\n            } else {\r\n                message.success('设置角色权限成功')\r\n                this.setState({\r\n                    isShowAuth: false,\r\n                    roles: [...this.state.roles]\r\n                })\r\n            }\r\n        } else {\r\n            message.error('设置角色权限失败')\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getRoles()\r\n    }\r\n\r\n    render() {\r\n        const { roles, role, isShowAdd, isShowAuth } = this.state\r\n\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button>&nbsp;&nbsp;\r\n                <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={roles}\r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize: PAGE_SIZE}}\r\n                    rowSelection={{\r\n                        type: 'radio', \r\n                        selectedRowKeys: [role._id],\r\n                        onSelect: (role) => {//选择某个radio时候的回调\r\n                            this.setState({role})\r\n                        }\r\n                    }}\r\n                    onRow={this.onRow}\r\n                />\r\n\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={isShowAdd}\r\n                    onOk={this.addRole}\r\n                    onCancel={() => {\r\n                        this.setState({isShowAdd: false})\r\n                        this.form.resetFields()\r\n                    }}\r\n                >\r\n                    <AddForm\r\n                        setForm={(form) => {this.form = form}}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"设置角色权限\"\r\n                    visible={isShowAuth}\r\n                    onOk={this.updateRole}\r\n                    onCancel={() => {\r\n                        this.setState({isShowAuth: false})\r\n                    }}\r\n                >\r\n                    <AuthForm\r\n                        role={role}\r\n                        ref={this.auth}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    { logout }\r\n)(Role)","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n    if (!time) return ''\r\n    let date = new Date(time)\r\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n      + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst { Option } = Select\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.props.setForm(this.props.form)\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        const { roles, user } = this.props\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }\r\n\r\n        return (\r\n        <Form {...formItemLayout}>\r\n            <Item label='用户名'>\r\n            {\r\n                getFieldDecorator('username', {\r\n                initialValue: user.username,\r\n                rules: [\r\n                    {required: true, message: '用户名称必须输入'}\r\n                ]\r\n                })(\r\n                <Input placeholder='请输入用户名'/>\r\n                )\r\n            }\r\n            </Item>\r\n            {\r\n                user._id ? null : (\r\n                    <Item label='密码'>\r\n                    {\r\n                        getFieldDecorator('password', {\r\n                        initialValue: user.password,\r\n                        rules: [\r\n                            {required: true, message: '密码必须输入'}\r\n                        ]\r\n                        })(\r\n                        <Input placeholder='请输入密码' type='password'/>\r\n                        )\r\n                    }\r\n                    </Item>\r\n                )\r\n            }\r\n            <Item label='手机号'>\r\n            {\r\n                getFieldDecorator('phone', {\r\n                initialValue: user.phone,\r\n                rules: [\r\n                    {required: true, message: '手机号必须输入'}\r\n                ]\r\n                })(\r\n                <Input placeholder='请输入手机号'/>\r\n                )\r\n            }\r\n            </Item>\r\n            <Item label='邮箱'>\r\n            {\r\n                getFieldDecorator('email', {\r\n                initialValue: user.email,\r\n                rules: [\r\n                    {required: true, message: '邮箱必须输入'}\r\n                ]\r\n                })(\r\n                <Input placeholder='请输入邮箱'/>\r\n                )\r\n            }\r\n            </Item>\r\n            <Item label='角色'>\r\n            {\r\n                getFieldDecorator('role_id', {\r\n                initialValue: user.role_id,\r\n                rules: [\r\n                    {required: true, message: '角色必须选择'}\r\n                ]\r\n                })(\r\n                    <Select placeholder='请选择角色'>\r\n                        {roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)}\r\n                    </Select>\r\n                )\r\n            }\r\n            </Item>\r\n        </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, { Component } from 'react'\r\nimport { \r\n    Card,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport { formateDate } from '../../utils/dateUtil'\r\nimport LinkButton from '../../components/link-button'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport { reqAddOrUpdateUser, reqDeleteUser, reqUsers } from '../../api'\r\nimport UserForm from './user-form'\r\n\r\nexport default class User extends Component {\r\n\r\n    state = {\r\n        users: [], //所有的用户列表\r\n        roles: [], //所有角色的列表\r\n        isShow: false,//是否显示修改框\r\n        loading: false\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username'\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email'\r\n            }, \r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone'\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                render: formateDate\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render: id => this.roleNames[id]\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>&nbsp;&nbsp;\r\n                        <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n\r\n    /**\r\n     * 显示修改界面\r\n     * @param {any} user \r\n     */\r\n    showUpdate = (user) => {\r\n        this.user = user//保存user\r\n        this.setState({\r\n            isShow: true\r\n        })\r\n    } \r\n\r\n    /**\r\n     * 添加或更新用户\r\n     */\r\n    addOrUpdateUser = () => {\r\n        //1、收集输入数据\r\n        this.form.validateFields( async (err, value) => {\r\n            if (!err) {\r\n                this.setState({isShow: false})\r\n                this.form.resetFields()\r\n                let isUser = false\r\n                if (this.user && this.user._id) {\r\n                    isUser = true\r\n                    value._id = this.user._id\r\n                } \r\n                //2、提交添加的请求\r\n                const res = await reqAddOrUpdateUser(value)\r\n                //3、更新列表显示\r\n                if (res.status === 0) {\r\n                    message.success(`${isUser ? '修改' : '添加'}用户成功!`)\r\n                    this.getUsers()\r\n                } else {\r\n                    message.error(`${isUser ? '修改' : '添加'}用户失败!`)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获取用户列表\r\n     */\r\n    getUsers = async () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const res = await reqUsers()\r\n        if (res.status === 0) {\r\n            const { users, roles } = res.data\r\n            this.initRoleNames(roles)\r\n            this.setState({\r\n                users,\r\n                roles,\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `你确定要删除${user.username}吗`,\r\n            onOk: async () => {\r\n                const res = await reqDeleteUser(user._id)\r\n                if (res.status === 0) {\r\n                    message.success('删除角色成功！')\r\n                    this.getUsers()\r\n                } else {\r\n                    message.error('删除角色失败')\r\n                }\r\n            }   \r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * 根据role的数组，生成包含所有角色的对象（属性名用角色id值）\r\n     * @param {any[]} roles \r\n     */\r\n    initRoleNames = (roles) => {\r\n        this.roleNames = roles.reduce((pre, role)=>{\r\n            pre[role._id] = role.name\r\n            return pre\r\n        }, {})\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getUsers()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { users, isShow, loading, roles } = this.state\r\n        const user = this.user || {}\r\n        const title = <Button type='primary' onClick={() => this.setState({isShow: true})}>创建用户</Button>\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table \r\n                    bordered\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                    dataSource={users}\r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize: PAGE_SIZE, showQuickJumper: true}}\r\n                />\r\n                <Modal\r\n                    title={`${user._id ? '修改' : '创建'}用户`}\r\n                    visible={isShow}\r\n                    onOk={this.addOrUpdateUser}\r\n                    onCancel={() => {\r\n                        this.setState({isShow: false}, () => {\r\n                            this.user = {}\r\n                        })\r\n                        this.form.resetFields()\r\n                    }}\r\n                >\r\n                    <UserForm \r\n                        setForm={form => this.form = form}\r\n                        roles={roles}\r\n                        user={user}\r\n                    ></UserForm>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setHeadTitle } from '../../redux/actions'\r\nimport { Row, Col, Button } from 'antd'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n    goHome = () => {\r\n        this.props.setHeadTitle('首页')\r\n        this.props.history.replace('/home')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className='not-found'>\r\n                <Col span={12} className='left'></Col>\r\n                <Col span={12} className='right'>\r\n                    <h1>404</h1>\r\n                    <h2>抱歉，你访问的页面不存在</h2>\r\n                    <div>\r\n                        <Button type='primary' onClick={this.goHome}>\r\n                            返回到首页\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {setHeadTitle}\r\n)(NotFound)","import React, { Component } from 'react'\r\nimport { Switch, Redirect, Route } from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport Header from '../../components/header'\r\nimport LeftNav from '../../components/left-nav'\r\nimport Home from '../home'\r\nimport Category from '../category/category'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport Product from '../product'\r\nimport Role from '../role'\r\nimport User from '../user'\r\nimport { connect } from 'react-redux'\r\nimport NotFound from '../not-found/not-found'\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n/**\r\n * 后台管理的路由组件\r\n */\r\nclass Admin extends Component {\r\n    render() {\r\n        const user = this.props.user\r\n        if (user && user._id)\r\n            return (\r\n                <Layout style={{minHeight: '100%'}}>\r\n                    <Sider>\r\n                        <LeftNav/>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header>header</Header>\r\n                        <Content style={{background: '#fff', margin: 30}}>\r\n                            <Switch>\r\n                                <Redirect exact={true} from='/' to='/home'></Redirect>\r\n                                <Route path='/home' component={Home}></Route>\r\n                                <Route path='/category' component={Category}></Route>\r\n                                <Route path='/bar' component={Bar}></Route>\r\n                                <Route path='/line' component={Line}></Route>\r\n                                <Route path='/pie' component={Pie}></Route>\r\n                                <Route path='/product' component={Product}></Route>\r\n                                <Route path='/role' component={Role}></Route>\r\n                                <Route path='/user' component={User}></Route>\r\n                                <Route path='/charts/bar' component={Bar}></Route>\r\n                                <Route path='/charts/line' component={Line}></Route>\r\n                                <Route path='/charts/pie' component={Pie}></Route>\r\n                                {/* 上面没有一个匹配，直接显示notfound */}\r\n                                <Route component={NotFound}></Route>\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        else return <Redirect to='/login'/>\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {}\r\n)(Admin)","/**\n * 应用的根组件\n */\nimport './App.css'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Login from './pages/login/login'\nimport Admin from './pages/admin'\nimport React, { Component } from 'react'\n\nexport default class App extends Component {\n  \n  render() {\n    return (\n      <BrowserRouter>\n        <Switch> {/**只匹配其中一个 */}\n          <Route path='/login' component={Login}></Route>\n          <Route path='/' component={Admin}></Route>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\"\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport { RECEIVE_USER, RESET_USER, SET_HEAD_TITLE, SHOW_ERROR_MSG } from \"./action-types\"\r\n\r\nconst initTitle = '首页'\r\nconst initUser = storageUtils.getUser()\r\n\r\n/**\r\n * 用来管理\r\n * @param {any} state \r\n * @param {any} action \r\n */\r\nfunction user (state = initUser, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USER:\r\n            return action.user\r\n        case SHOW_ERROR_MSG:\r\n            const err = action.err\r\n            return {...state, err}\r\n        case RESET_USER:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/**\r\n * 用来管理头部标题\r\n * @param {any} state \r\n * @param {any} action \r\n */\r\nfunction headTitle (state = initTitle, action) {\r\n    switch (action.type) {\r\n        case SET_HEAD_TITLE:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/**\r\n * 向外默认暴露的是合并产生的总的reducer函数\r\n * 管理的总的state的结构\r\n * {\r\n *      headTitle: '首页',\r\n *      user: {}\r\n * }\r\n */\r\nexport default combineReducers({\r\n    user,\r\n    headTitle\r\n})\r\n","/**\r\n * redux最核心的管理对象store\r\n */\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//向外默认暴露store\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/**\n * 应用的入口 \n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n),document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";","module.exports = __webpack_public_path__ + \"static/media/100.f956aa42.png\";"],"sourceRoot":""}